[metadata]
version = "1.0"

[versions]
# platforms
kotlin-core = "2.0.0"
kotlin-coroutine = "1.8.0"
kotlin-runtime = "3.2.0"
kotlinx-serialization = "1.6.3"
java = "17"
mindustry = "146"

# libraries
distributor = "3.3.0"
distributor4 = "4.0.0-beta.3-SNAPSHOT"
junit = "5.10.2"
testcontainers = "1.19.8"
guava = "33.2.0-jre"
hoplite = "2.7.5"
deepl = "1.5.0"
slf4j = "2.0.13"
discord4j = "3.2.6"
password4j = "1.8.2"
rabbitmq-client = "5.21.0"
jsoup = "1.17.2"
javacord = "3.8.0"
log4j-to-slf4j = "2.23.1"
snowflake-id = "0.0.2"
okhttp = "4.12.0"
classgraph = "4.8.172"
logback = "1.5.6"
hikari = "5.1.0"
exposed = "0.50.1"
h2 = "2.2.224"
mariadb = "3.4.0"
caffeine = "3.1.8"
prettytime = "5.0.8.Final"
time4j = "4.38"
nohorny = "2.2.0"
jda = "5.0.0-beta.24"
cloud-core = "2.0.0-beta.4"
cloud-translations = "1.0.0-beta.2"
cloud-discord = "1.0.0-beta.2"

# gradle plugins
toxopid = "3.2.0"
indra = "3.1.3"
spotless = "6.25.0"
shadow = "8.1.1"
ktlint = "0.49.1"
ktor-gradle = "2.3.11"

[libraries]
# libraries
distributor4-common = { module = "com.xpdustry:distributor-common", version.ref = "distributor4" }
distributor4-permission-rank = { module = "com.xpdustry:distributor-permission-rank", version.ref = "distributor4" }
distributor4-command-cloud = { module = "com.xpdustry:distributor-command-cloud", version.ref = "distributor4" }
distributor-api = { module = "fr.xpdustry:distributor-api", version.ref = "distributor" }
distributor-kotlin = { module = "fr.xpdustry:distributor-kotlin", version.ref = "distributor" }
junit-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-rabbitmq = { module = "org.testcontainers:rabbitmq", version.ref = "testcontainers" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
hoplite-core = { module = "com.sksamuel.hoplite:hoplite-core", version.ref = "hoplite" }
hoplite-yaml = { module = "com.sksamuel.hoplite:hoplite-yaml", version.ref = "hoplite" }
deepl = { module = "com.deepl.api:deepl-java", version.ref = "deepl" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
discord4j-core = { module = "com.discord4j:discord4j-core", version.ref = "discord4j" }
password4j = { module = "com.password4j:password4j", version.ref = "password4j" }
rabbitmq-client = { module = "com.rabbitmq:amqp-client", version.ref = "rabbitmq-client" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutine" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlin-coroutine" }
kotlinx-coroutines-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "kotlin-coroutine" }
javacord-api = { module = "org.javacord:javacord-api", version.ref = "javacord" }
javacord-core = { module = "org.javacord:javacord-core", version.ref = "javacord" }
log4j-to-slf4j = { module = "org.apache.logging.log4j:log4j-to-slf4j", version.ref = "log4j-to-slf4j" }
snowflake-id = { module = "de.mkammerer.snowflake-id:snowflake-id", version.ref = "snowflake-id" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
classgraph = { module = "io.github.classgraph:classgraph", version.ref = "classgraph" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }
exposed-json = { module = "org.jetbrains.exposed:exposed-json", version.ref = "exposed" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }
mariadb = { module = "org.mariadb.jdbc:mariadb-java-client", version.ref = "mariadb" }
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version.ref = "caffeine" }
prettytime = { module = "org.ocpsoft.prettytime:prettytime", version.ref = "prettytime" }
time4j-core = { module = "net.time4j:time4j-core", version.ref = "time4j" }
nohorny = { module = "com.xpdustry:nohorny", version.ref = "nohorny" }
jda = { module = "net.dv8tion:JDA", version.ref = "jda" }
cloud-core = { module = "org.incendo:cloud-core", version.ref = "cloud-core" }
cloud-translations-core = { module = "org.incendo:cloud-translations-core", version.ref = "cloud-translations" }

# gradle plugins
toxopid = { module = "fr.xpdustry:toxopid", version.ref = "toxopid" }
indra-common = { module = "net.kyori:indra-common", version.ref = "indra" }
indra-licenser-spotless = { module = "net.kyori:indra-licenser-spotless", version.ref = "indra" }
spotless = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }
shadow = { module = "com.github.johnrengelman:shadow", version.ref = "shadow" }
kotlin-plugin-core = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin-core" }
kotlin-plugin-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin-core" }
ktor-gradle = { module = "io.ktor.plugin:plugin", version.ref = "ktor-gradle" }

[bundles]
cloud = ["cloud-core", "cloud-translations-core"]